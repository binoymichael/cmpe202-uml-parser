import com.github.javaparser.JavaParser;
import com.github.javaparser.ast.CompilationUnit;
import com.github.javaparser.ast.body.ClassOrInterfaceDeclaration;
import com.github.javaparser.ast.body.FieldDeclaration;
import com.github.javaparser.ast.body.MethodDeclaration;
import com.github.javaparser.ast.visitor.VoidVisitorAdapter;

import java.io.FileInputStream;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Main {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) throws Exception {

        // creates an input stream for the file to be parsed
        FileInputStream in = new FileInputStream("Hello.java");

        // parse the file
        CompilationUnit cu = JavaParser.parse(in);

//         prints the resulting compilation unit to default system output
        System.out.println(cu.toString());

        new NodeVisitor().visit(cu, null);

    }


    private static class NodeVisitor extends VoidVisitorAdapter<Void> {
        @Override
        public void visit(ClassOrInterfaceDeclaration n, Void arg) {
            System.out.println(n.getName());
            super.visit(n, arg);
        }

        @Override
        public void visit(MethodDeclaration n, Void arg) {
            System.out.println(n.getName());
            super.visit(n, arg);
        }

        @Override
        public void visit(FieldDeclaration n, Void arg) {
            System.out.println(n.toString());
            super.visit(n, arg);
        }
    }
}
